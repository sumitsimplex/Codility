package com.codility.test;

public class Countries {

	public static void main(String[] args) {
		Countries ct = new Countries();
		int[][] A = { { 4, 4, 4 }, { 4, 3, 4 }, { 3, 2, 4 }, { 2, 2, 2 }, { 3, 3, 4 }, { 1, 4, 4 }, { 4, 1, 1 } };
		System.out.println("\n\ncountries: " + ct.solution(A));
	}

	public int solution(int[][] A) {
		int result = 0;
		int N = A.length;
		int M = A[0].length;
		boolean[][] countries = new boolean[N][M];
		for (int i = N - 1; i >= 0; i--) {
			for (int j = M - 1; j >= 0; j--) {
				if (check(A, i, j))
					result++;
			}
		}
		for (int i = 0; i < N; i++) {
			for (int j = 0; j < M; j++) {
				System.out.print(countries[i][j] + ", " + A[i][j] + " \t");
			}
			System.out.println("");
		}
		return result;
	}

	public boolean check(int[][] A, int i, int j) {
		int N = A.length;
		int M = A[0].length;
		boolean east = (j == M - 1 || A[i][j + 1] != A[i][j]);
		boolean south = (i == N - 1 || A[i + 1][j] != A[i][j]);
		boolean north = (i == 0 || A[i - 1][j] != A[i][j]);
		if (east && south) {
			return true;
		}
		return false;
	}
}
